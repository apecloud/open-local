name: Test KubeBlocks E2E With Open-local

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: "Install open-local specify release version or empty from code"
        required: false
        default: ''
      storage-class:
        description: "specify open-local storage class name"
        required: false
        default: 'open-local-hostpath'
      test_type:
        description: 'KubeBlocks test type'
        required: true
        default: 'apecloud-mysql'
        type: choice
        options:
          - apecloud-mysql
          - postgresql
          - redis
          - mongodb
      kubeblocks-version:
        description: "The KubeBlocks version"
        required: false
        default: 'v0.7.1'
  workflow_call:
    inputs:
      release-version:
        description: "The release version of open-local"
        type: string
        required: false
        default: ''
      storage-class:
        description: "specify open-local storage class name"
        type: string
        required: false
        default: 'open-local-hostpath'
      kubeblocks-version:
        description: "The KubeBlocks version"
        type: string
        required: false
        default: 'v0.7.1'
      test_type:
        description: "KubeBlocks test type"
        type: string
        required: true
        default: 'apecloud-mysql'

run-name: Test open-local:${{ inputs.release-version }} ${{ inputs.storage-class }} On KubeBlocks:${{ inputs.kubeblocks-version }} ${{ inputs.test_type }}

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  terraform-init-k8s:
    uses: apecloud/apecloud-cd/.github/workflows/terraform-init.yml@v0.1.44
    with:
      artifact-name: "open-local-gke-${{ github.sha }}"
      cloud-provider: "${{ vars.CLOUD_PROVIDER }}"
      cluster-version: "1.26"
      region: "${{ vars.K8S_REGION }}"
      node-type: "${{ vars.NODE_TYPE }}"
      node-size: "${{ vars.NODE_SIZE }}"
    secrets: inherit

  deploy-open-local:
    needs: [ terraform-init-k8s ]
    if: ${{ needs.terraform-init-k8s.result == 'success' }}
    uses: ./.github/workflows/deploy-open-local.yml
    with:
      k8s-cluster-name: ${{ needs.terraform-init-k8s.outputs.k8s-cluster-name }}
      release-version: "${{ inputs.release-version }}"
    secrets: inherit

  install-kubeblocks:
    needs: [ terraform-init-k8s, deploy-open-local ]
    if: ${{ needs.deploy-open-local.result == 'success' }}
    uses: apecloud/apecloud-cd/.github/workflows/test-kbcli.yml@v0.1.44
    with:
      cloud-provider: "${{ vars.CLOUD_PROVIDER }}"
      region: "${{ vars.K8S_REGION }}"
      release-version: "${{ inputs.kubeblocks-version }}"
      test-type: "0"
      test-type-name: "install-kubeblocks"
      test-args: "--config-s3 true --upgrade true --check-addon false --open-local ${{ inputs.storage-class }}"
      k8s-cluster-name: ${{ needs.terraform-init-k8s.outputs.k8s-cluster-name }}
    secrets: inherit

  kubeblocks-e2e:
    needs: [ terraform-init-k8s, install-kubeblocks ]
    if: ${{ needs.install-kubeblocks.result == 'success' }}
    uses: apecloud/apecloud-cd/.github/workflows/test-kbcli.yml@v0.1.44
    with:
      cloud-provider: "${{ vars.CLOUD_PROVIDER }}"
      region: "${{ vars.K8S_REGION }}"
      release-version: "${{ inputs.kubeblocks-version }}"
      test-type: "${{ inputs.test_type }}"
      test-type-name: "${{ inputs.test_type }}"
      test-args: "--open-local ${{ inputs.storage-class }}"
      k8s-cluster-name: ${{ needs.terraform-init-k8s.outputs.k8s-cluster-name }}
    secrets: inherit

  send-message:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ install-kubeblocks, deploy-open-local, kubeblocks-e2e ]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: ./

      - name: send message
        run: |
          TEST_RESULT="deploy-open-local|${{ needs.deploy-open-local.outputs.deploy-result }}"
          TEST_RESULT="${TEST_RESULT}##install-kubeblocks|${{ needs.install-kubeblocks.outputs.test-result }}"
          TEST_RESULT="${TEST_RESULT}##${{ inputs.test_type }}|${{ needs.kubeblocks-e2e.outputs.test-result }}"
          
          TEST_RESULT=$( bash .github/utils/utils.sh --type 12 \
              --github-repo "${{ github.repository }}" \
              --github-token "${{ env.GITHUB_TOKEN }}" \
              --test-result "${TEST_RESULT}" \
              --run-id "$GITHUB_RUN_ID" )
          
          date_ret=$(date +%Y-%m-%d-%T)
          test_title="[${{ inputs.release-version }}] Test open-local ${{ inputs.storage-class }} on KubeBlocks:${{ inputs.kubeblocks-version }} ${{ inputs.test_type }}  [${date_ret}]"
          python3 .github/utils/send_mesage.py \
              --url ${{ vars.TEST_BOT_WEBHOOK }} \
              --title "$test_title" \
              --result "$TEST_RESULT"

  terraform-destroy-k8s:
    if: ${{ always() }}
    needs: [ terraform-init-k8s, kubeblocks-e2e ]
    uses: apecloud/apecloud-cd/.github/workflows/terraform-destroy.yml@v0.1.44
    with:
      artifact-name: "open-local-gke-${{ github.sha }}"
      region: "${{ vars.K8S_REGION }}"
    secrets: inherit
